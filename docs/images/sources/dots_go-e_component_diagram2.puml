@startuml
skinparam defaultTextAlignment center
skinparam backgroundColor transparent
'skinparam backgroundColor white
'skinparam arrowFontName Courier
'skinparam legendFontName Courier
'skinparam actorFontName Courier
'skinparam cloudFontName Courier
'skinparam componentFontName Courier
'skinparam handwritten true
skinparam actorBackgroundColor Gold

cloud "Kubernetes\n<img:../static/k8s.png{scale=0.1}>" as aks {
    [<img:../static/fastapi_logo.png{scale=0.32}>\nSimulation\nOrchestrator] as so
    node "<img:../static/helics-logo.png{scale=0.01}>\nCalculation models:\n<img:../static/arrow_double.png{scale=0.25}> model IO data" as models
    [<img:../static/grafana.png{scale=0.05}>\nDashboard] as grafana
    [<img:../static/helics-logo.png{scale=0.01}>\nHelics broker\n<img:../static/arrow_double.png{scale=0.25}> messages] as helics

    models <. so: deploy models
    models <-r-> so: lifecycle\ncommands

    database "<img:../static/influxdb_crop.png{scale=0.21}>" {
        [Simulation results] as influxdb
    }
    models ..> influxdb: write to\ndatabase
    influxdb ..> grafana: database\nquery

    grafana -left[hidden]-> helics
}

actor "service\ndeveloper" as developer
actor "simulator\nuser" as simulator

[<img:../static/github.png{scale=0.08}>\nCalculation\nService Template] as template
node "<img:../static/python.png{scale=0.02}>\nCalculation\nService Repos" as repos

so -up.> repos: pull image

developer .> template
template .> repos

simulator .> so: HTTP: Start simulation <img:../static/esdl_logo_large.png{scale=0.1}>
simulator .> grafana

@enduml
